{"version":3,"sources":["../../src/utils/analytics.js"],"names":["debug","STG_KEY","PROD_KEY","ANALYTICS_WRITE_KEY","process","env","SYNCANO_ENV","analytics","Analytics","flushAt","identify","details","userId","id","traits","first_name","last_name","source","email","is_active","alias","previousId","track","eventName","params","props","Object","assign","version","pjson","session","project","instance","trackParams","properties","event","trackCommand","options","additionalParams","cmd","_","find","option","Command","parent","_name","split","slice","args","rawArgs","join","group","_group","type","name"],"mappings":";;;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;;;AAPA;AASA,MAAM,EAAEA,KAAF,KAAY,qBAAO,iBAAP,CAAlB;;AAEA,MAAMC,UAAU,kCAAhB;AACA,MAAMC,WAAW,kCAAjB;;AAEA,MAAMC,sBAAsBC,QAAQC,GAAR,CAAYC,WAAZ,KAA4B,MAA5B,GAAqCL,OAArC,GAA+CC,QAA3E;AACA,MAAMK,YAAY,IAAIC,uBAAJ,CAAcL,mBAAd,EAAmC,EAACM,SAAS,CAAV,EAAnC,CAAlB;;AAEA,MAAMC,WAAYC,OAAD,IAAa;AAC5BX,QAAM,UAAN;AACAO,YAAUG,QAAV,CAAmB;AACjBE,YAAQD,QAAQE,EADC;AAEjBC,YAAQ;AACN,oBAAcH,QAAQI,UADhB;AAEN,mBAAaJ,QAAQK,SAFf;AAGNC,cAAQ,SAHF;AAINC,aAAOP,QAAQO,KAJT;AAKNC,iBAAWR,QAAQQ;AALb;AAFS,GAAnB;AAUAZ,YAAUa,KAAV,CAAgB;AACdC,gBAAYV,QAAQO,KADN;AAEdN,YAAQD,QAAQE;AAFF,GAAhB;AAID,CAhBD;;AAkBA,MAAMS,QAAQ,CAACC,SAAD,EAAYC,SAAS,EAArB,KAA4B;AACxCxB,QAAM,OAAN;;AAEA,QAAMyB,QAAQC,OAAOC,MAAP,CAAc;AAC1BC,aAASC,kBAAMD;AADW,GAAd,EAEXJ,MAFW,CAAd;;AAIA,MAAIM,kBAAQC,OAAZ,EAAqB;AACnBN,UAAMO,QAAN,GAAiBF,kBAAQC,OAAR,CAAgBC,QAAjC;AACD;;AAED,QAAMC,cAAc;AAClBC,gBAAYT,KADM;AAElBU,WAAOZ;AAFW,GAApB;;AAKA,MAAIO,kBAAQlB,MAAZ,EAAoB;AAClBqB,gBAAYrB,MAAZ,GAAqBkB,kBAAQlB,MAA7B;AACAL,cAAUe,KAAV,CAAgBW,WAAhB;AACD;AACF,CApBD;;AAsBA,MAAMG,eAAe,CAACC,OAAD,EAAUC,mBAAmB,EAA7B,KAAoC;AACvDtC,QAAM,cAAN;AACA,QAAMuC,MAAMC,iBAAEC,IAAF,CAAOJ,OAAP,EAAiBK,MAAD,IAAYA,kBAAkBC,oBAAQA,OAAtD,CAAZ;AACA3C,QAAM,qBAAN,EAA6BuC,IAAIK,MAAJ,CAAWC,KAAxC,EAHuD,CAGR;AAC/C,QAAMD,SAASL,IAAIK,MAAJ,CAAWC,KAAX,KAAqB,KAArB,GAA6B,IAA7B,GAAoCN,IAAIK,MAAJ,CAAWC,KAAX,CAAiBC,KAAjB,CAAuB,GAAvB,EAA4BC,KAA5B,CAAkC,CAAC,CAAnC,EAAsC,CAAtC,CAAnD,CAJuD,CAIqC;;AAE5F,QAAMtB,QAAQC,OAAOC,MAAP,CAAc;AAC1BC,aAASW,IAAIK,MAAJ,CAAWhB,OAAX,EADiB;AAE1BoB,UAAMT,IAAIK,MAAJ,CAAWK,OAAX,CAAmBF,KAAnB,CAAyB,CAAzB,EAA4BG,IAA5B,CAAiC,GAAjC,CAFoB;AAG1BC,WAAOZ,IAAIa,MAHe,EAGP;AACnBC,UAAM;AAJoB,GAAd,EAKXf,gBALW,CAAd;;AAOA,MAAIf,YAAa,gBAAegB,IAAIe,IAAJ,EAAW,EAA3C;AACA,MAAIV,MAAJ,EAAY;AACVrB,gBAAa,gBAAeqB,MAAO,IAAGL,IAAIe,IAAJ,EAAW,EAAjD;AACD;;AAEDhC,QAAMC,SAAN,EAAiBE,KAAjB;AACD,CAnBD;;kBAqBe;AACbf,UADa;AAEbY,OAFa;AAGbc;AAHa,C","file":"analytics.js","sourcesContent":["/* eslint no-underscore-dangle: \"warn\" */\nimport _ from 'lodash'\nimport Analytics from 'analytics-node'\nimport Command from 'commander'\n\nimport pjson from '../../package.json'\nimport logger from './debug'\nimport session from './session'\n\nconst { debug } = logger('utils-analytics')\n\nconst STG_KEY = 'CCupheBjgV6WI0emy3oRUnDyjQ8ngmgB'\nconst PROD_KEY = 'fLDtpYXRjFYnHlp1gvzl4I3Gv8gDoQ8m'\n\nconst ANALYTICS_WRITE_KEY = process.env.SYNCANO_ENV === 'test' ? STG_KEY : PROD_KEY\nconst analytics = new Analytics(ANALYTICS_WRITE_KEY, {flushAt: 1})\n\nconst identify = (details) => {\n  debug('identify')\n  analytics.identify({\n    userId: details.id,\n    traits: {\n      'First name': details.first_name,\n      'Last name': details.last_name,\n      source: 'Sign up',\n      email: details.email,\n      is_active: details.is_active\n    }\n  })\n  analytics.alias({\n    previousId: details.email,\n    userId: details.id\n  })\n}\n\nconst track = (eventName, params = {}) => {\n  debug('track')\n\n  const props = Object.assign({\n    version: pjson.version\n  }, params)\n\n  if (session.project) {\n    props.instance = session.project.instance\n  }\n\n  const trackParams = {\n    properties: props,\n    event: eventName\n  }\n\n  if (session.userId) {\n    trackParams.userId = session.userId\n    analytics.track(trackParams)\n  }\n}\n\nconst trackCommand = (options, additionalParams = {}) => {\n  debug('trackCommand')\n  const cmd = _.find(options, (option) => option instanceof Command.Command)\n  debug('trackCommand parent', cmd.parent._name) // eslint-disable-line\n  const parent = cmd.parent._name === 'cli' ? null : cmd.parent._name.split('-').slice(-1)[0] // eslint-disable-line\n\n  const props = Object.assign({\n    version: cmd.parent.version(),\n    args: cmd.parent.rawArgs.slice(2).join(' '),\n    group: cmd._group, // eslint-disable-line\n    type: 'command'\n  }, additionalParams)\n\n  let eventName = `CLI command: ${cmd.name()}`\n  if (parent) {\n    eventName = `CLI command: ${parent} ${cmd.name()}`\n  }\n\n  track(eventName, props)\n}\n\nexport default {\n  identify,\n  track,\n  trackCommand\n}\n"]}