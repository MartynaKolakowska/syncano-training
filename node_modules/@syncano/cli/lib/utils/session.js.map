{"version":3,"sources":["../../src/utils/session.js"],"names":["debug","Session","constructor","settings","projectPath","project","userId","majorVersion","pjson","version","split","HOST","process","env","SYNCANO_HOST","ENDPOINT_HOST","getFullName","userFirstName","userLastName","getSpaceHost","instance","getInitInstance","Init","getPluginsInstance","Plugins","getBaseURL","getHost","getDistPath","distPath","path","join","mkdirp","sync","getBuildPath","buildPath","getAnonymousConnection","Syncano","meta","createConnection","account","authenticated","connection","accountKey","getAuthKey","instanceName","details","get","id","userEmail","email","first_name","last_name","err","deleteInstance","name","delete","createInstance","create","getInstance","instanceNameToGet","getInstances","list","checkAuth","userDetails","Account","getUserDetails","Promise","resolve","reject","Error","findProjectPath","cwd","load","getProject","loadPlugins","program","context","isAuthenticated","format","cyan","exit","isAuthenticatedToInit","red","checkConnection","message","hasProject","hasProjectPath","hasSocket","socketName","socket","Socket","existLocally","notAlreadyInitialized","deployProject","hostings","Hosting","all","map","hosting","deploy"],"mappings":"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","file":"session.js","sourcesContent":["import Syncano from '@syncano/core'\nimport format from 'chalk'\nimport path from 'path'\nimport mkdirp from 'mkdirp'\nimport Promise from 'bluebird'\n\nimport logger from './debug'\nimport pjson from '../../package.json'\nimport getSettings from '../settings'\nimport genUniqueName from './unique-instance'\nimport Socket from './sockets'\nimport Init from './init'\nimport Hosting from './hosting'\nimport Plugins from './plugins'\nimport { echo } from './print-tools'\n\nconst { debug } = logger('utils-session')\n\nexport class Session {\n  constructor () {\n    this.settings = null\n    this.projectPath = null\n    this.project = null\n    this.userId = null\n\n    this.majorVersion = pjson.version.split('.')[0]\n\n    this.HOST = process.env.SYNCANO_HOST || 'api.syncano.io'\n    this.ENDPOINT_HOST = this.HOST === 'api.syncano.io' ? 'syncano.space' : 'syncano.link'\n  }\n\n  getFullName () {\n    return `${this.userFirstName} ${this.userLastName}`\n  }\n\n  getSpaceHost () {\n    if (this.project && this.project.instance) {\n      return `${this.project.instance}.${this.ENDPOINT_HOST}`\n    }\n  }\n\n  getInitInstance () {\n    return new Init(this)\n  }\n\n  getPluginsInstance () {\n    return new Plugins(this)\n  }\n\n  getBaseURL () {\n    return `https://${this.getHost()}`\n  }\n\n  getHost () {\n    return this.HOST\n  }\n\n  getDistPath () {\n    let distPath = '.dist'\n    if (this.projectPath) {\n      distPath = path.join(this.projectPath, '.dist')\n    }\n    mkdirp.sync(distPath)\n    return distPath\n  }\n\n  getBuildPath () {\n    const buildPath = path.join(this.projectPath, '.build')\n    mkdirp.sync(buildPath)\n    return buildPath\n  }\n\n  getAnonymousConnection () {\n    return new Syncano({\n      meta: {\n        'api_host': this.getHost()\n      }\n    })\n  }\n\n  async createConnection () {\n    debug('createConnection')\n    if (this.settings.account.authenticated()) {\n      debug('user is authenticated')\n      this.connection = new Syncano({\n        accountKey: this.settings.account.getAuthKey(),\n        meta: {\n          'api_host': this.getHost()\n        }\n      })\n\n      if (this.project && this.project.instance) {\n        this.connection = new Syncano({\n          instanceName: this.project.instance,\n          accountKey: this.settings.account.getAuthKey(),\n          meta: {\n            'api_host': this.getHost()\n          }\n        })\n      }\n    } else {\n      this.connection = this.getAnonymousConnection()\n    }\n\n    try {\n      debug('get user details')\n      const details = await this.connection.account.get(this.settings.account.getAuthKey())\n      this.userId = details.id\n      this.userEmail = details.email\n      this.userFirstName = details.first_name\n      this.userLastName = details.last_name\n    } catch (err) {}\n  }\n\n  async deleteInstance (name) {\n    return this.connection.instance.delete(name)\n  }\n\n  async createInstance (name = genUniqueName()) {\n    return this.connection.instance.create({ name })\n  }\n\n  async getInstance (instanceName) {\n    const instanceNameToGet = instanceName || (this.project && this.project.instance)\n    return this.connection.instance.get(instanceNameToGet)\n  }\n\n  async getInstances () {\n    return this.connection.instance.list()\n  }\n\n  async checkAuth () {\n    const userDetails = await this.connection.Account.getUserDetails()\n    return new Promise((resolve, reject) => {\n      if (userDetails) {\n        return resolve(userDetails)\n      }\n      reject(new Error('No such user!'))\n    })\n  }\n\n  static findProjectPath () {\n    return process.cwd()\n  }\n\n  async load () {\n    debug('load')\n\n    // Checking all folders up\n    try {\n      const projectPath = await Session.findProjectPath()\n      debug('Searching for syncano.yml', projectPath)\n      this.projectPath = projectPath\n      this.settings = getSettings(projectPath)\n      this.project = this.settings.account.getProject(this.projectPath)\n    } catch (err) {\n      this.settings = getSettings()\n    }\n    await this.createConnection()\n    return this\n  }\n\n  loadPlugins (program, context) {\n    new Plugins(this).load(program, context)\n  }\n\n  isAuthenticated () {\n    if (!this.settings.account.authenticated()) {\n      echo()\n      echo(4)('You are not logged in!')\n      echo(4)(`Type ${format.cyan('npx s login')} for login to your account.`)\n      echo()\n      process.exit(1)\n    }\n  }\n\n  isAuthenticatedToInit () {\n    if (!this.settings.account.authenticated()) {\n      echo()\n      echo(4)(format.red('You have to be a logged in to be able an initialize a new project!'))\n      echo()\n    }\n  }\n\n  async checkConnection (instanceName) {\n    let instance\n\n    try {\n      instance = await this.getInstance(instanceName)\n    } catch (err) {\n      debug(err.message)\n      if (err.message === 'Not found.') {\n        echo()\n        echo(4)(`Instance ${format.cyan(instanceName || this.project.instance)} was not found on your account!`)\n        echo()\n\n        if (instanceName) return process.exit()\n\n        echo(4)(`Type ${format.cyan('npx s attach')} to choose one of the existing instances.`)\n        echo()\n      }\n      process.exit(1)\n    }\n\n    return instance\n  }\n\n  hasProject () {\n    this.hasProjectPath()\n\n    if (!this.project) {\n      echo()\n      echo(4)('You have to attach this project to one of your instances.')\n      echo(4)(`Try ${format.cyan('npx s attach')}.`)\n      echo()\n      process.exit()\n    }\n  }\n\n  hasProjectPath () {\n    if (!this.projectPath) {\n      echo()\n      echo(4)(`I don't see any project here. Try ${format.cyan('npx s init')}.`)\n      echo()\n      process.exit()\n    }\n  }\n\n  hasSocket (socketName) { // eslint-disable-line class-methods-use-this\n    const socket = new Socket(socketName)\n    if (!socket.existLocally) {\n      echo()\n      echo(4)('File socket.yml was not found in a project directory!')\n      echo(4)(`Check your directory or try ${format.cyan('npx s create')} to create a new Socket.`)\n      echo()\n      process.exit()\n    }\n  }\n\n  notAlreadyInitialized () {\n    if (this.projectPath && this.project) {\n      echo()\n      echo(4)('Project in this folder is already initiated!')\n      echo(4)(`It is attached to ${format.cyan(this.project.instance)} Syncano instance.`)\n      echo()\n      process.exit()\n    }\n  }\n\n  async deployProject () { // eslint-disable-line class-methods-use-this\n    const hostings = await Hosting.list()\n    return Promise.all(hostings.map((hosting) => hosting.deploy()))\n  }\n}\n\nexport default new Session()\n"]}