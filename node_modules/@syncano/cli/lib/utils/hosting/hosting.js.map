{"version":3,"sources":["../../../src/utils/hosting/hosting.js"],"names":["debug","HostingFile","loadRemote","fileRemoteData","id","instanceName","path","decodeURIComponent","checksum","size","loadLocal","fileLocalData","localPath","fs","readFileSync","statSync","Hosting","constructor","hostingName","name","existRemotely","existLocally","hostingURL","session","project","instance","editHostingURL","getHost","hostingHost","config","remote","domains","add","params","configParams","src","browser_router","settings","addHosting","addHostingURL","cname","push","paramsToAdd","response","axios","request","url","method","data","headers","account","getAuthKey","hasCNAME","indexOf","updateHosting","configure","removeCNAME","cnameToRemoveIndex","splice","paramsToUpdate","setRemoteState","deploy","auth","delete","deleteHosting","get","hosting","listFromProject","listHosting","list","projectHostings","Promise","all","map","getDirectories","excluded","notExcluded","dirname","startsWith","readdirSync","process","cwd","filter","file","dirs","isDirectory","find","description","isUpToDate","areFilesUpToDate","error","resolve","getRemote","err","localHostingSettings","getHosting","Object","keys","length","join","projectPath","sep","getURL","encodePath","pathToEncode","split","part","encodeURI","decodePath","decodeURI","getFilesToUpload","remoteFiles","fileToUpdate","_","payload","FormData","append","createReadStream","singleFile","remoteChecksum","localChecksum","format","green","dim","connection","updateFile","uploadFile","getFilesToDelete","localFiles","filesToDelete","deleteFile","generateUploadFilesResult","result","red","prettyUploadSize","uploadedSize","cyan","uploadedFilesCount","uploadFiles","files","promises","listLocalFiles","forEach","values","upload","syncFiles","existsSync","Error","bold","listRemoteFiles","localChecksums","filePath","localFile","remoteChecksums","remoteFile","isEqual","sortBy","listFiles","hostingFile","localHostingFiles","Array","isArray","fullPath","internalPath","remoteCopy","isSynced","extend","getCNAME","domain","getCnameURL","default"],"mappings":"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","file":"hosting.js","sourcesContent":["import fs from 'fs'\nimport FormData from 'form-data'\nimport format from 'chalk'\nimport path from 'path'\nimport prettyBytes from 'pretty-bytes'\nimport _ from 'lodash'\nimport Promise from 'bluebird'\nimport md5 from 'md5'\nimport axios from 'axios'\n\nimport session from '../session'\nimport logger from '../debug'\nimport { getFiles } from './utils'\nimport { echo, error } from '../../utils/print-tools'\n\nconst { debug } = logger('utils-hosting')\n\nclass HostingFile {\n  loadRemote (fileRemoteData) {\n    debug('loadRemote')\n    this.id = fileRemoteData.id\n    this.instanceName = fileRemoteData.instanceName\n    this.path = decodeURIComponent(fileRemoteData.path)\n    this.checksum = fileRemoteData.checksum\n    this.size = fileRemoteData.size\n    return this\n  }\n  loadLocal (fileLocalData) {\n    debug('loadLocal')\n    this.localPath = fileLocalData.localPath\n    this.path = fileLocalData.path\n    this.checksum = md5(fs.readFileSync(this.localPath))\n    this.size = fs.statSync(this.localPath).size\n    return this\n  }\n}\n\nclass Hosting {\n  constructor (hostingName) {\n    debug('Hosting.constructor', hostingName)\n\n    this.name = hostingName\n    this.path = null\n\n    this.existRemotely = null\n    this.existLocally = null\n\n    this.hostingURL = `/v2/instances/${session.project.instance}/hosting/`\n    this.editHostingURL = `https://${session.getHost()}${this.hostingURL}${this.name}/`\n    this.hostingHost = session.getHost() === 'api.syncano.rocks' ? 'syncano.ninja' : 'syncano.site'\n    this.config = {}\n\n    // Remote state\n    this.remote = {\n      domains: []\n    }\n\n    this.loadLocal()\n  }\n\n  static async add (params) {\n    const configParams = {\n      src: params.src,\n      config: {\n        browser_router: params.browser_router || false\n      }\n    }\n    session.settings.project.addHosting(params.name, configParams)\n\n    const hostingURL = `/v2/instances/${session.project.instance}/hosting/`\n    const addHostingURL = `https://${session.getHost()}${hostingURL}`\n\n    const domains = [params.name]\n    if (params.cname) {\n      domains.push(params.cname)\n    }\n\n    const paramsToAdd = {\n      name: params.name,\n      config: {\n        browser_router: params.browser_router\n      },\n      domains\n    }\n\n    const response = await axios.request({\n      url: addHostingURL,\n      method: 'POST',\n      data: paramsToAdd,\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n    return response.data\n  }\n\n  hasCNAME (cname) {\n    return this.remote.domains.indexOf(cname) > -1\n  }\n\n  updateHosting () {\n    const params = {\n      src: this.src,\n      cname: this.cname,\n      config: {\n        browser_router: this.browser_router || false\n      }\n    }\n    if (!this.cname) {\n      delete params.cname\n    }\n    session.settings.project.updateHosting(this.name, params)\n  }\n\n  async configure (params) {\n    const domains = this.remote.domains\n    if (params.cname && domains.indexOf(params.cname) < 0) {\n      domains.push(params.cname)\n    }\n\n    if (params.removeCNAME) {\n      this.cname = null\n      const cnameToRemoveIndex = domains.indexOf(params.removeCNAME)\n      if (cnameToRemoveIndex > -1) {\n        domains.splice(cnameToRemoveIndex, 1)\n      }\n    }\n\n    this.cname = params.cname\n    this.domains = domains\n    this.config.browser_router = params.browser_router\n    this.updateHosting()\n\n    const paramsToUpdate = {\n      name: this.name,\n      config: this.config,\n      domains\n    }\n\n    const response = await axios.request({\n      url: this.editHostingURL,\n      method: 'PATCH',\n      data: paramsToUpdate,\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n    return this.setRemoteState(response.data)\n  }\n\n  async deploy () {\n    debug('deploy')\n\n    if (!this.existRemotely) {\n      debug('adding hosting')\n      return Hosting.add({\n        name: this.name,\n        src: this.src\n      })\n    }\n\n    debug('patching hosting')\n    // TODO: not optimal\n    const paramsToUpdate = {\n      name: this.name,\n      domains: this.domains,\n      config: this.config,\n      auth: this.auth || {}\n    }\n\n    const response = await axios.request({\n      url: this.editHostingURL,\n      method: 'PATCH',\n      data: paramsToUpdate,\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n\n    return this.setRemoteState(response.data)\n  }\n\n  async delete () {\n    await axios.request({\n      url: this.editHostingURL,\n      method: 'DELETE',\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n    session.settings.project.deleteHosting(this.name)\n    return this\n  }\n\n  static get (hostingName) {\n    debug(`get ${hostingName}`)\n    const hosting = new Hosting(hostingName)\n    return hosting.loadRemote()\n  }\n\n  static listFromProject () {\n    return session.settings.project.listHosting()\n  }\n\n  // list all hostings (mix of locally definde and installed on server)\n  static async list () {\n    debug('list()')\n    const projectHostings = Hosting.listFromProject()\n    debug('projectHostings', projectHostings)\n    return Promise.all(projectHostings.map((hosting) => Hosting.get(hosting.name)))\n  }\n\n  static getDirectories () {\n    const excluded = ['node_modules', 'src', 'syncano']\n\n    function notExcluded (dirname) {\n      if (dirname.startsWith('.')) {\n        return\n      }\n      if (excluded.indexOf(dirname) !== -1) {\n        return\n      }\n      return dirname\n    }\n\n    return fs.readdirSync(process.cwd()).filter((file) => {\n      const dirs = []\n      if (fs.statSync(`${process.cwd()}/${file}`).isDirectory()) {\n        dirs.push(file)\n      }\n      return dirs.find(notExcluded)\n    })\n  }\n\n  async setRemoteState (hosting) {\n    debug('setRemoteState', hosting.name)\n    if (hosting && typeof hosting === 'object') {\n      this.existRemotely = true\n      this.remote.name = hosting.name\n      this.remote.description = hosting.description\n      this.remote.domains = hosting.domains\n      this.remote.config = hosting.config || {}\n      this.remote.config.browser_router = hosting.config.browser_router || false\n      this.remote.auth = hosting.auth\n      this.isUpToDate = await this.areFilesUpToDate()\n    } else {\n      this.existRemotely = false\n      this.error = hosting\n    }\n    return Promise.resolve()\n  }\n\n  async loadRemote () {\n    debug('loadRemote()')\n    try {\n      const hosting = await this.getRemote()\n      await this.setRemoteState(hosting)\n    } catch (err) {\n      this.existRemotely = false\n    }\n    return this\n  }\n\n  loadLocal () {\n    debug('loadLocal()')\n    const localHostingSettings = session.settings.project.getHosting(this.name)\n\n    if (localHostingSettings) {\n      if (Object.keys(localHostingSettings).length > 0) {\n        this.existLocally = true\n        this.src = localHostingSettings.src\n        this.cname = localHostingSettings.cname\n        this.auth = localHostingSettings.auth\n        this.path = path.join(session.projectPath, this.src, path.sep)\n        this.url = this.getURL(this.name)\n\n        this.config = localHostingSettings.config || {}\n      }\n    }\n  }\n\n  getURL () {\n    return `https://${this.name}--${session.project.instance}.${this.hostingHost}`\n  }\n\n  encodePath (pathToEncode) {\n    return pathToEncode.split(path.sep).map(part => encodeURI(part)).join(path.sep)\n  }\n\n  decodePath (pathToEncode) {\n    return pathToEncode.split('/').map(part => decodeURI(part)).join('/')\n  }\n\n  // Verify local file if it should be created or updated\n  async getFilesToUpload (file, remoteFiles) {\n    debug('getFilesToUpload')\n    const fileToUpdate = _.find(remoteFiles, { path: file.path })\n    const payload = new FormData()\n    payload.append('file', fs.createReadStream(file.localPath))\n    payload.append('path', this.encodePath(file.path))\n\n    let singleFile = null\n\n    if (fileToUpdate) {\n      const remoteChecksum = fileToUpdate.checksum\n      const localChecksum = file.checksum\n\n      // Check if checksum of the local file is the same as remote one\n      if (remoteChecksum === localChecksum) {\n        try {\n          echo(6)(`${format.green('✓')} File skipped: ${format.dim(file.path)}`)\n        } catch (err) {\n          error(err)\n        }\n      } else {\n        try {\n          singleFile = await session.connection.hosting.updateFile(this.name, fileToUpdate.id, payload)\n          echo(6)(`${format.green('✓')} File updated: ${format.dim(file.path)}`)\n        } catch (err) {\n          echo(`Error while syncing (updating) ${file.path}`)\n          debug(err.response.data)\n        }\n      }\n    } else {\n      // Adding (first upload) file\n      try {\n        singleFile = await session.connection.hosting.uploadFile(this.name, payload)\n        echo(6)(`${format.green('✓')} File added:   ${format.dim(file.path)}`)\n      } catch (err) {\n        echo(`Error while syncing (creating) ${file.path}`)\n        debug(err.response.data)\n      }\n    }\n\n    return singleFile\n  }\n\n  // Verify remote file if it deleted\n  getFilesToDelete (remoteFiles, localFiles) {\n    debug('getFilesToDelete')\n\n    const filesToDelete = remoteFiles.filter(file => !_.find(localFiles, {path: file.path}))\n\n    return filesToDelete.map(async file => {\n      const singleFile = await session.connection.hosting.deleteFile(this.name, file.id)\n      echo(6)(`${format.green('✓')} File deleted: ${format.dim(file.path)}`)\n      return singleFile\n    })\n  }\n\n  // Files upload report\n  generateUploadFilesResult (result) {\n    if (!result) {\n      return `\\n\\t${format.red('No files synchronized!')}\\n`\n    }\n    const prettyUploadSize = prettyBytes(result.uploadedSize)\n\n    return `\\n\\t${format.cyan(result.uploadedFilesCount)} files synchronized, ${format.cyan(prettyUploadSize)} in total\n    \\t${format.green(this.name)} is available at: ${format.green(this.getURL())}\\n`\n  }\n\n  async uploadFiles (files, params) {\n    let uploadedFilesCount = 0\n    let uploadedSize = 0\n    let promises = []\n\n    const localFiles = await this.listLocalFiles()\n\n    // promises for add/update operations\n    await localFiles.forEach(file => {\n      promises.push(this.getFilesToUpload(file, files))\n    })\n\n    const values = await Promise.all(promises)\n    uploadedFilesCount = 0\n    uploadedSize = 0\n    values.forEach(upload => {\n      uploadedFilesCount += 1\n      uploadedSize += upload ? upload.size : 0\n    })\n\n    if (params.delete) {\n      // promises for deleting files\n      await Promise.all(this.getFilesToDelete(files, localFiles))\n    }\n\n    return { uploadedFilesCount, uploadedSize }\n  }\n\n  // Run this to synchronize hosted files\n  // first we are getting remote files\n  async syncFiles (params) {\n    debug('syncFiles()')\n\n    if (!fs.existsSync(this.path)) {\n      throw new Error(`Local folder ${format.bold(this.path)} doesn't exist!`)\n    }\n\n    const remoteFiles = await this.listRemoteFiles()\n    const result = await this.uploadFiles(remoteFiles, params)\n    return this.generateUploadFilesResult(result)\n  }\n\n  async areFilesUpToDate () {\n    debug('areFilesUpToDate()')\n\n    // Check if local folder exist\n    if (!fs.existsSync(this.path)) {\n      return false\n    }\n\n    const localChecksums = await this.listLocalFiles().map(localFile => ({\n      filePath: localFile.path,\n      checksum: localFile.checksum\n    }))\n\n    const remoteChecksums = await this.listRemoteFiles().map(remoteFile => ({\n      filePath: remoteFile.path,\n      checksum: remoteFile.checksum\n    }))\n\n    return _.isEqual(_.sortBy(localChecksums, 'filePath'), _.sortBy(remoteChecksums, 'filePath'))\n  }\n\n  // Get list of the hostings first, then get the files list for given one\n  async listRemoteFiles () {\n    debug('listRemoteFiles()')\n    const files = await session.connection.hosting.listFiles(this.name)\n    return Promise.all(files.map(async file => {\n      // TODO: Maybe it should be somehow done in the library not here\n      file.path = this.decodePath(file.path)\n\n      const hostingFile = new HostingFile(file)\n      return hostingFile.loadRemote(file)\n    }))\n  }\n\n  // Get info about hostings first, then get the files list for given one\n  async listLocalFiles () {\n    debug('listLocalFiles')\n    const localHostingFiles = this.path ? await getFiles(this.path) : []\n    if (!Array.isArray(localHostingFiles)) return localHostingFiles\n\n    return localHostingFiles ? localHostingFiles.map(file => {\n      return new HostingFile().loadLocal({\n        localPath: file.fullPath,\n        path: file.internalPath\n      })\n    }) : []\n  }\n\n  async listFiles () {\n    const remoteFiles = await this.listRemoteFiles()\n    const listLocalFiles = await this.listLocalFiles()\n\n    const files = []\n    listLocalFiles.forEach(file => {\n      const remoteCopy = _.find(remoteFiles, { path: file.path })\n\n      if (remoteCopy) {\n        file.isUpToDate = file.checksum === remoteCopy.checksum\n        file.isSynced = true\n        _.extend(file, remoteCopy)\n      }\n      files.push(file)\n    })\n    return files\n  }\n\n  getCNAME () {\n    return _.find(this.remote.domains, (domain) => domain.indexOf('.') !== -1)\n  }\n\n  getCnameURL () {\n    const cname = this.getCNAME()\n    if (cname) {\n      return `http://${cname}`\n    }\n  }\n\n  getRemote () {\n    debug('getRemote()', this)\n    return session.connection.hosting.get(this.name)\n  }\n}\n\nexport { Hosting as default, HostingFile }\n"]}