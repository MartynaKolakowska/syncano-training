{"version":3,"sources":["../../../src/utils/hosting/utils.js"],"names":["getFiles","directory","ignore","fs","readFileSync","path","join","split","err","glob","sync","cwd","realpath","nodir","map","file","fullPath","internalPath","replace"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,SAASA,QAAT,CAAmBC,SAAnB,EAA8B;AAC5B;AACA,MAAIC,SAAS,EAAb;AACA,MAAI;AACFA,aAASC,aAAGC,YAAH,CAAgBC,eAAKC,IAAL,CAAUL,SAAV,EAAqB,gBAArB,CAAhB,EAAwD,MAAxD,EAAgEM,KAAhE,CAAsE,IAAtE,CAAT;AACD,GAFD,CAEE,OAAOC,GAAP,EAAY,CAAE;;AAEhB,SAAOC,eAAKC,IAAL,CAAW,IAAX,EAAgB;AACrBC,SAAKV,SADgB;AAErBC,UAFqB;AAGrBU,cAAU,IAHW;AAIrBC,WAAO;AAJc,GAAhB,EAKJC,GALI,CAKAC,SAAS;AACdC,cAAUD,IADI;AAEdE,kBAAcF,KAAKG,OAAL,CAAc,GAAEjB,SAAU,EAA1B,EAA6B,EAA7B;AAFA,GAAT,CALA,CAAP;AASD;;kBAEc;AACbD;AADa,C","file":"utils.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport glob from 'glob'\n\nfunction getFiles (directory) {\n  // Ignore patterns from .syncanoignore file\n  let ignore = []\n  try {\n    ignore = fs.readFileSync(path.join(directory, '.syncanoignore'), 'utf8').split('\\n')\n  } catch (err) {}\n\n  return glob.sync(`**`, {\n    cwd: directory,\n    ignore,\n    realpath: true,\n    nodir: true\n  }).map(file => ({\n    fullPath: file,\n    internalPath: file.replace(`${directory}`, '')\n  }))\n}\n\nexport default {\n  getFiles\n}\n"]}