{"version":3,"sources":["../../src/utils/error-response.js"],"names":["process","noDeprecation","on","reason","p","name","status","errors","detail","errorMessage","format","cyan","message","fileIssue","env","NODE_ENV","CLI_SHOW_STACK","console","log","stack","ErrorResponse","constructor","context","contextName","toLowerCase","session","checkErrorType","err","errno","handleRequestError","url","_","has","response","request","green","handleSystemError","code","path","captureException","account","settings","attributes","auth_key","Raven","setContext","user","handle","errorType","handleError","requestError","systemError","default"],"mappings":"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","file":"error-response.js","sourcesContent":["import Raven from 'raven'\nimport format from 'chalk'\nimport _ from 'lodash'\nimport { error, echo } from './print-tools'\n\nprocess.noDeprecation = true\n\nprocess.on('unhandledRejection', (reason, p) => {\n  if (reason.name === 'RequestError' && reason.status === 403) {\n    if (reason.errors.detail === 'No such API Key.') {\n      const errorMessage =\n        `API key from your config file is not valid. Use ${format.cyan('npx s login')} to log in once again.`\n      echo(errorMessage)\n      echo()\n      return\n    }\n  }\n\n  const message = `Unhandled Rejection! ${reason}`\n  const fileIssue = 'Please file an issue here:\\nhttps://github.com/Syncano/syncano-node/issues'\n  error(message, fileIssue)\n  if (process.env.NODE_ENV === 'test' || process.env.CLI_SHOW_STACK) {\n    console.log(reason.stack)\n  }\n})\n\nclass ErrorResponse {\n  constructor (context) {\n    this.context = context\n    this.name = context.name\n    this.contextName = context.constructor.name.toLowerCase()\n    this.session = this.context.session || null\n  }\n  static checkErrorType (err) {\n    if (err.name === 'RequestError') return 'requestError'\n    if (err.errno < 0) return 'systemError'\n\n    return 'default'\n  }\n  static handleRequestError (err, name, contextName) {\n    if (err.status === 404) {\n      const errorMessage = `\"${name}\" ${contextName} could not be found on your remote Syncano account!`\n\n      const url = _.has(err, 'response.request.url')\n        ? `We've tried reaching the following url: ${err.response.request.url}` : null\n\n      error(err, errorMessage, url)\n      echo()\n      echo(`Did you run ${format.green('npx s deploy')} command?`)\n      return\n    }\n    error(err)\n  }\n\n  static handleSystemError (err, name, contextName) {\n    if (err.code === 'ENOENT') {\n      error('File or directory not found at:', err.path)\n      return\n    }\n    error(err)\n  }\n\n  captureException (err) {\n    const context = this.context\n    const session = context.session\n\n    if (session) {\n      const account = session.settings.account\n      delete account.attributes.auth_key\n      Raven.setContext({ user: { session, account } })\n    } else {\n      Raven.setContext({ user: { context } })\n    }\n\n    Raven.captureException(err)\n  }\n\n  handle (err) {\n    const name = this.name\n    const contextName = this.contextName\n    const errorType = ErrorResponse.checkErrorType(err)\n\n    this.captureException(err)\n    const handleError = {\n      requestError: () => ErrorResponse.handleRequestError(err, name, contextName),\n      systemError: () => ErrorResponse.handleSystemError(err, name, contextName),\n      default: () => error(err)\n    }\n\n    return handleError[errorType]()\n  }\n}\n\nexport default ErrorResponse\n"]}