{"version":3,"sources":["../../../src/utils/sockets/sockets.js"],"names":["debug","MetadataObject","constructor","name","metadata","socketName","existRemotely","existLocally","getStatus","status","type","Endpoint","call","params","axios","request","url","getURL","method","timeout","transformResponse","data","getFullName","session","getSpaceHost","Handler","Event","Component","componentPath","path","join","Socket","getLocal","socketPath","packageName","getRealName","JSON","parse","fs","readFileSync","linkWithProject","projectPath","child","spawnSync","cwd","maxBuffer","stdio","process","isComponentFile","filePath","includes","build","Promise","resolve","reject","command","args","env","FORCE_COLOR","out","split","CompileError","stderr","toString","settings","loaded","utils","findLocalPath","getSocketSettings","fromNPM","remote","spec","endpoints","event_handlers","events","components","loadLocal","isDependency","match","getTemplatesChoices","uninstall","socket","localPath","uninstallLocal","uninstallRemote","Error","deleteFolderRecursive","connection","delete","listRemote","list","localSocketsList","listLocal","all","map","get","loadRemote","create","templateName","newSocketPath","init","getSocketPath","existsSync","mkdirp","sync","templateFolder","normalize","files","nodir","forEach","file","oldContent","socketDescription","newContent","partial","fileToSave","replace","dir","writeFileSync","err","verifySchema","load","Validator","validateMainSchema","attributes","verify","getSrcFolder","getFullConfig","getFull","getRemote","getRemoteSpec","YAML","setRemoteState","environment","version","updatedAt","updated_at","installed","statusInfo","status_info","config","baseDir","indexOf","isSocketFile","fileFullPath","getRawStatus","msg","error","getType","getVersion","getScripts","sep","getCompiledScriptsFolder","folder","getSocketZipPath","getSocketZip","getSocketEnvZip","isEmptyEnv","envZipFiles","listZipFiles","length","getSocketNodeModulesChecksum","getSocketSourcesZipChecksum","getSocketConfigFile","composeFromSpec","objectType","ObjectClass","objects","Object","assign","keys","objectName","objectMetadata","object","composeComponentsFromSpec","getEndpoints","getEndpoint","endpointName","_","find","getEventHandlers","getEvents","getEndpointTrace","traceId","trace","getEndpointTraces","lastId","traces","filteredTraces","id","push","getTraces","getHost","project","instance","account","getAuthKey","WebSocket","getEndpointTraceByUrl","resp","headers","getComponents","zipPath","yauzl","open","lazyEntries","zipfile","readEntry","on","entry","test","fileName","getAllFiles","ignore","glob","realpath","fullPath","internalPath","createZip","archive","zlib","level","output","createWriteStream","mode","pipe","localYMLChecksum","getSocketYMLFile","remoteYMLChecksum","checksum","addMetaFiles","fileNameWithPath","remoteFile","finalize","createEnvZip","envFolder","filesInZip","dot","follow","unlinkSync","updateEnvCall","form","FormData","endpointPath","append","stringify","createReadStream","submit","protocol","host","res","statusCode","message","updateEnv","socketEnvShouldBeUpdated","updateSocketZip","install","zipFiles","allFiles","numberOfFiles","isConfigSynced","responseData","responseCode","createAllZips","compile","updateSocketNPMDeps","isEqual","updateConfig","update","optionName","envValue","getConfigOptionFromEnv","waitForStatusInfo","setTimeout","addHosting","hostingName","save","getHosting","Hosting","listHostings","deleteHosting","getScriptObject","srcFile","compiledFile","getFileForEndpoint","startsWith","getSourceMapPath","base","getOrigFileLine","traceData","smc","SourceMap","SourceMapConsumer","encoding","originalPositionFor","line","lineNumber","column","columnNumber","getPrettyTrace","origFileLine","origFilePath","getOrigFilePath","lines","getConfigOptions","socketVarName","toUpperCase","optionVarName","getConfigOptionsToAsk","options","option","required","isCompatible","socketMajorVersion","majorVersion","CompatibilityError"],"mappings":"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","file":"sockets.js","sourcesContent":["import fs from 'fs'\nimport klawSync from 'klaw-sync'\nimport glob from 'glob'\nimport child from 'child_process'\nimport FindKey from 'find-key'\nimport md5 from 'md5'\nimport YAML from 'js-yaml'\nimport axios from 'axios'\nimport mkdirp from 'mkdirp'\nimport path from 'path'\nimport FormData from 'form-data'\nimport archiver from 'archiver'\nimport Promise from 'bluebird'\nimport template from 'es6-template-strings'\nimport _ from 'lodash'\nimport SourceMap from 'source-map'\nimport WebSocket from 'ws'\nimport yauzl from 'yauzl'\nimport Validator from '@syncano/validate'\n\nimport logger from '../debug'\nimport session from '../session'\nimport utils from './utils'\nimport Hosting from '../hosting'\nimport { p, echo } from '../print-tools'\nimport { getTemplate } from '../templates'\nimport { CompileError, CompatibilityError } from '../errors'\n\nconst { debug } = logger('utils-sockets')\n\nclass MetadataObject {\n  constructor (name, metadata, socketName) {\n    this.name = name\n    this.metadata = metadata\n    this.socketName = socketName\n    this.existRemotely = null\n    this.existLocally = null\n  }\n  getStatus () {\n    if (this.existLocally && this.existRemotely) {\n      return { status: 'synced', type: 'ok' }\n    }\n\n    if (this.existLocally && !this.existRemotely) {\n      return { status: 'not synced', type: 'warn' }\n    }\n\n    if (!this.existLocally && this.existRemotely) {\n      return { status: 'no local configuration', type: 'fail' }\n    }\n  }\n}\n\nclass Endpoint extends MetadataObject {\n  call (params) {\n    return axios.request({\n      url: this.getURL(),\n      method: 'POST',\n      timeout: 3000,\n      params,\n      // Do not transform data automaticaly\n      transformResponse: (data) => data\n    })\n  }\n\n  getFullName () {\n    return `${this.socketName}/${this.name}`\n  }\n\n  getURL () {\n    return `https://${session.getSpaceHost()}/${this.socketName}/${this.name}/`\n  }\n}\n\nclass Handler extends MetadataObject {}\n\nclass Event extends MetadataObject {}\n\nclass Component extends MetadataObject {\n  constructor (name, metadata, socketName) {\n    super(name, metadata, socketName)\n    this.componentPath = path.join(Socket.getLocal(this.socketName).socketPath, this.metadata.path)\n    this.packageName = this.getRealName()\n  }\n  getRealName () {\n    debug('getRealComponentName')\n    return JSON.parse(fs.readFileSync(path.join(this.componentPath, 'package.json'))).name\n  }\n\n  linkWithProject (projectPath) {\n    debug('linkWithProject')\n    child.spawnSync(\n      'yarn',\n      ['link'],\n      {\n        cwd: this.componentPath,\n        maxBuffer: 2048 * 1024,\n        stdio: [process.stdio, 'pipe', 'pipe']\n      }\n    )\n    child.spawnSync(\n      'yarn',\n      ['link', this.packageName],\n      {\n        cwd: projectPath,\n        maxBuffer: 2048 * 1024,\n        stdio: [process.stdio, 'pipe', 'pipe']\n      }\n    )\n  }\n\n  isComponentFile (filePath) {\n    return filePath.includes(path.join(this.componentPath, 'src'))\n  }\n\n  build () {\n    debug(`component build: ${this.packageName}`)\n\n    return new Promise(async (resolve, reject) => {\n      const command = 'npm'\n      const args = 'run build -s'\n\n      process.env.FORCE_COLOR = true\n      const out = child.spawnSync(\n        command,\n        args.split(' '),\n        {\n          cwd: this.componentPath,\n          maxBuffer: 2048 * 1024,\n          stdio: [process.stdio, 'pipe', 'pipe']\n        }\n      )\n\n      if (out.status !== 0) {\n        reject(new CompileError(out.stderr.toString()))\n      } else {\n        resolve()\n      }\n    })\n  }\n}\n\nclass Socket {\n  constructor (socketName, socketPath) {\n    debug('Sockets.constructor', socketName)\n    this.name = socketName\n    this.settings = { loaded: false }\n    this.socketPath = socketPath || utils.findLocalPath(socketName)\n\n    if (this.socketPath) {\n      this.settings = session.settings.getSocketSettings(this.socketPath, this.name)\n    }\n\n    this.existRemotely = null\n    this.existLocally = null\n    this.fromNPM = null\n\n    // that looks stupid\n    this.remote = {\n      spec: {\n        endpoints: {},\n        event_handlers: {},\n        events: {},\n        components: {}\n      },\n      metadata: {}\n    }\n\n    this.spec = {\n      spec: {\n        endpoints: {},\n        event_handlers: {},\n        events: {},\n        components: {}\n      }\n    }\n\n    this.loadLocal()\n  }\n\n  isDependency () {\n    debug('isDependency')\n    // TODO: better way to dermine that?\n    if (this.socketPath.match(/node_modules/)) {\n      return true\n    }\n  }\n\n  static getTemplatesChoices () {\n    return utils.getTemplatesChoices()\n  }\n\n  static uninstall (socket = {}) {\n    debug('uninstall', socket.name)\n\n    if (socket.existLocally && socket.localPath) {\n      Socket.uninstallLocal(socket)\n      if (socket.existRemotely) {\n        this.uninstallRemote(socket.name)\n      }\n      return Promise.resolve()\n    }\n\n    if (socket.existRemotely) {\n      return this.uninstallRemote(socket.name)\n    }\n\n    return Promise.reject(new Error('Socket with given doesn\\'t exist!'))\n  }\n\n  static uninstallLocal (socket) {\n    utils.deleteFolderRecursive(socket.localPath)\n  }\n\n  // TODO: check if the socket is installed (it may be not yet installed yet (before sync))\n  static async uninstallRemote (socketName) {\n    debug('uninstallRemote', socketName)\n    return session.connection.socket.delete(socketName)\n  }\n\n  // list sockets based on call to Syncano (sockets are installed on Synano)\n  static listRemote () {\n    debug('listRemote()')\n    return session.connection.socket.list()\n  }\n\n  // list all sockets (mix of locally definde and installed on server)\n  static async list () {\n    debug('list()')\n    // Local Socket defined in folders and in project deps\n    const localSocketsList = utils.listLocal()\n    return Promise.all(localSocketsList.map((socketName) => Socket.get(socketName)))\n  }\n\n  // Creating Socket simple object\n  static getLocal (socketName) {\n    debug('getLocal')\n    return new Socket(socketName)\n  }\n\n  static async get (socketName) {\n    debug(`Getting Socket: ${socketName}`)\n    const socket = Socket.getLocal(socketName)\n    await socket.loadRemote()\n    return socket\n  }\n\n  static create (socketName, templateName) {\n    debug('create socket', socketName, templateName)\n    const newSocketPath = path.join(session.projectPath, 'syncano', socketName)\n    const socket = new Socket(socketName, newSocketPath)\n    if (socket.existLocally) {\n      return Promise.reject(new Error('Socket with given name already exist!'))\n    }\n    return socket.init(templateName)\n  }\n\n  init (templateName) {\n    debug('init', templateName)\n    return new Promise((resolve, reject) => {\n      const socketPath = this.getSocketPath()\n      if (!fs.existsSync(socketPath)) {\n        mkdirp.sync(socketPath)\n      }\n\n      try {\n        const templateFolder = path.normalize(getTemplate(templateName))\n        const files = klawSync(templateFolder, {nodir: true})\n        files.forEach(file => {\n          const oldContent = fs.readFileSync(file.path, 'utf8')\n          const socket = {\n            socketName: this.name,\n            socketDescription: `Description of ${this.name}`\n          }\n\n          const newContent = template(oldContent, socket, { partial: true })\n          const fileToSave = path.join(socketPath, file.path.replace(templateFolder, ''))\n\n          mkdirp.sync(path.parse(fileToSave).dir)\n          fs.writeFileSync(path.join(socketPath, file.path.replace(templateFolder, '')), newContent)\n        })\n        resolve(this)\n      } catch (err) {\n        return reject(err)\n      }\n    })\n  }\n\n  verifySchema () {\n    // Reload local settings\n    if (this.settings.load) this.settings.load()\n    return Validator.validateMainSchema(this.settings.attributes)\n  }\n\n  async verify () {\n    if (!fs.existsSync(this.getSrcFolder())) {\n      throw new Error('No src folder!')\n    }\n    this.verifySchema()\n  }\n\n  getFullConfig () {\n    return this.settings.getFull()\n  }\n\n  async getRemote () {\n    debug('getRemote', this.name)\n    try {\n      return await session.connection.socket.get(this.name)\n    } catch (err) {\n      return false\n    }\n  }\n\n  async getRemoteSpec () {\n    debug('getRemoteSpec')\n    if (this.remote.files['socket.yml']) {\n      try {\n        const spec = await axios.request({\n          url: this.remote.files['socket.yml'].file,\n          method: 'GET',\n          timeout: 3000\n        })\n        this.remote.spec = YAML.load(spec.data)\n      } catch (err) {}\n    }\n  }\n\n  setRemoteState (socket) {\n    this.existRemotely = true\n    this.remote.name = socket.name\n    this.remote.environment = socket.environment\n    this.remote.version = socket.version\n    this.remote.updatedAt = socket.updated_at\n    this.remote.installed = socket.installed\n    this.remote.files = socket.files\n    this.remote.status = socket.status\n    this.remote.statusInfo = socket.status_info\n    this.remote.config = socket.config\n    this.remote.metadata = socket.metadata\n  }\n\n  async loadRemote () {\n    debug('loadRemote()')\n    const socket = await this.getRemote()\n    if (socket) {\n      await this.setRemoteState(socket)\n      await this.getRemoteSpec()\n    } else {\n      this.existRemotely = false\n    }\n    return this\n  }\n\n  loadLocal () {\n    debug('loadLocal()')\n    if (this.settings.loaded) {\n      this.existLocally = true\n      this.localPath = this.settings.baseDir\n      this.spec = this.settings.getFull()\n      if (this.localPath.indexOf('node_modules') > -1) {\n        this.fromNPM = true\n      }\n    }\n  }\n\n  isSocketFile (fileFullPath) {\n    debug('isSocketFile', fileFullPath)\n    return fileFullPath.includes(this.localPath)\n  }\n\n  getRawStatus () {\n    return {\n      existRemotely: this.existRemotely,\n      existLocally: this.existLocally\n    }\n  }\n\n  getStatus () {\n    if (this.existLocally && !this.existRemotely) {\n      return { status: 'not synced', type: 'warn' }\n    }\n\n    let msg = this.remote.statusInfo || this.remote.status\n    if (msg && msg.error) {\n      msg = msg.error\n    }\n\n    if (this.remote.status === 'ok') {\n      return { status: msg, type: 'ok' }\n    } else if (this.remote.status === 'processing') {\n      return { status: msg, type: 'warn' }\n    }\n    return { status: msg, type: 'fail' }\n  }\n\n  getType () {\n    if (this.existLocally) {\n      if (this.fromNPM) {\n        return { msg: 'installed via NPM', type: 'ok' }\n      }\n      return { msg: 'local Socket', type: 'ok' }\n    }\n\n    return { msg: 'no local configuration', type: 'warn' }\n  }\n\n  getVersion () {\n    return this.remote ? this.remote.version : null\n  }\n\n  getScripts () {\n    return FindKey(this.spec, 'file')\n  }\n\n  getSrcFolder () {\n    return path.join(this.getSocketPath(), 'src', path.sep)\n  }\n\n  getCompiledScriptsFolder () {\n    const folder = path.join(this.getSocketPath(), '.dist', 'src', path.sep)\n    if (!fs.existsSync(folder)) {\n      mkdirp.sync(folder)\n    }\n    return folder\n  }\n\n  getSocketZipPath () {\n    const folder = path.join(this.getSocketPath(), '.zip')\n    if (!fs.existsSync(folder)) {\n      mkdirp.sync(folder)\n    }\n    return folder\n  }\n\n  getSocketZip () {\n    debug('getSocketZip')\n    return path.join(this.getSocketZipPath(), 'src.zip')\n  }\n\n  getSocketEnvZip () {\n    debug('getSocketEnvZip')\n    return path.join(this.getSocketZipPath(), 'env.zip')\n  }\n\n  async isEmptyEnv () {\n    debug('isEmptyEnv')\n    if (fs.existsSync(this.getSocketEnvZip())) {\n      const envZipFiles = await this.listZipFiles(this.getSocketEnvZip())\n      return !(envZipFiles.length > 0)\n    }\n    return true\n  }\n\n  getSocketNodeModulesChecksum () {\n    debug('getSocketNodeModulesChecksum')\n    if (fs.existsSync(this.getSocketEnvZip())) {\n      return md5(fs.readFileSync(this.getSocketEnvZip()))\n    }\n    return 'none'\n  }\n\n  getSocketSourcesZipChecksum () {\n    debug('getSocketSourcesZipChecksum')\n    if (fs.existsSync(this.getSocketEnvZip())) {\n      return md5(fs.readFileSync(this.getSocketZip()))\n    }\n    return 'none'\n  }\n\n  getSocketConfigFile () {\n    return path.join(session.projectPath, this.name, 'socket.yml')\n  }\n\n  composeFromSpec (objectType, ObjectClass) {\n    debug('composeFromSpec', objectType, ObjectClass)\n    const objects = Object.assign({}, this.remote.spec[objectType])\n    Object.assign(objects, this.spec[objectType])\n\n    debug('objects to process', objects)\n    return Object.keys(objects).map((objectName) => {\n      debug(`checking ${objectName}`)\n      const objectMetadata = objects[objectName]\n      debug('objectMetadata', objectMetadata)\n      const object = new ObjectClass(objectName, objectMetadata, this.name)\n\n      debug('existRemotely', this.remote.spec[objectType], objectName)\n      if (this.remote.spec[objectType][objectName]) {\n        debug(`existRemotely: ${true}`)\n        object.existRemotely = true\n      }\n\n      if (this.spec[objectType] && this.spec[objectType][objectName]) {\n        object.existLocally = true\n      }\n      return object\n    })\n  }\n\n  composeComponentsFromSpec (objectType, ObjectClass) {\n    debug('composeComponentsFromSpec', objectType, ObjectClass)\n    const objects = Object.assign({}, this.spec[objectType])\n    Object.assign(objects, this.spec[objectType])\n\n    debug('objects to process', objects)\n    return Object.keys(objects).map(objectName => {\n      debug(`checking ${objectName}`)\n      const objectMetadata = objects[objectName]\n      debug('objectMetadata', objectMetadata)\n      const object = new ObjectClass(objectName, objectMetadata, this.name)\n      return object\n    })\n  }\n\n  getEndpoints () {\n    debug('getEndpoints')\n    return this.composeFromSpec('endpoints', Endpoint)\n  }\n\n  getEndpoint (endpointName) {\n    debug('getEndpoints')\n    return _.find(this.getEndpoints(), { name: endpointName })\n  }\n\n  getEventHandlers () {\n    debug('getEventHandlers')\n    return this.composeFromSpec('event_handlers', Handler)\n  }\n\n  getEvents () {\n    debug('getEvents')\n    return this.composeFromSpec('events', Event)\n  }\n\n  getEndpointTrace (endpointName, traceId) {\n    return session.connection.trace.get(this.name, endpointName, traceId)\n  }\n\n  async getEndpointTraces (endpointName, lastId) {\n    debug('getEndpointTraces', endpointName, lastId)\n    try {\n      const traces = await session.connection.trace.get(this.name, endpointName)\n      if (!lastId) {\n        return traces\n      }\n      const filteredTraces = []\n      traces.forEach((trace) => {\n        if (trace.id > lastId) {\n          filteredTraces.push(trace)\n        }\n      })\n      return filteredTraces\n    } catch (err) {}\n  }\n\n  getTraces (lastId) {\n    const url = [\n      `https://${session.getHost()}/v2/instances/${session.project.instance}/channels/eventlog/poll/`,\n      '?transport=websocket',\n      `&api_key=${session.settings.account.getAuthKey()}`,\n      `&room=${`socket:${this.name}`}`\n    ].join('')\n\n    return new WebSocket(url)\n  }\n\n  static async getEndpointTraceByUrl (url) {\n    const resp = await axios.request({\n      url: `https://${session.getHost()}${url}`,\n      method: 'GET',\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n    return resp.data\n  }\n\n  async getComponents () {\n    debug('getComponents')\n    debug('getEndpoints')\n    return this.composeComponentsFromSpec('components', Component)\n  }\n\n  listZipFiles (zipPath) {\n    debug('listZipFiles', zipPath)\n    const files = []\n    if (!fs.existsSync(zipPath)) {\n      return files\n    }\n\n    return new Promise((resolve, reject) => {\n      yauzl.open(zipPath, {lazyEntries: true}, (err, zipfile) => {\n        if (err) {\n          reject(err)\n        }\n        zipfile.readEntry()\n        zipfile.on('end', entry => {\n          resolve(files)\n        })\n        zipfile.on('entry', entry => {\n          if (/\\/$/.test(entry.fileName)) {\n            // Directory file names end with '/'.\n            // Note that entires for directories themselves are optional.\n            // An entry's fileName implicitly requires its parent directories to exist.\n            zipfile.readEntry()\n          } else {\n            // file entry\n            files.push(entry.fileName)\n            zipfile.readEntry()\n          }\n        })\n      })\n    })\n  }\n\n  getAllFiles () {\n    // Ignore patterns from .syncanoignore file\n    let ignore = []\n    try {\n      ignore = fs.readFileSync(`${this.getCompiledScriptsFolder()}/.syncanoignore`, 'utf8').split('\\n')\n    } catch (err) {}\n\n    return glob.sync(`**`, {\n      cwd: this.getCompiledScriptsFolder(),\n      ignore,\n      realpath: true,\n      nodir: true\n    }).map(file => {\n      return {\n        fullPath: file,\n        internalPath: file.replace(`${this.getCompiledScriptsFolder()}`, '')\n      }\n    })\n  }\n\n  async createZip (params = {partial: true}) {\n    debug('createZip', params.partial)\n    return new Promise((resolve, reject) => {\n      const archive = archiver('zip', { zlib: { level: 9 } })\n      const output = fs.createWriteStream(this.getSocketZip(), { mode: 0o700 })\n\n      archive.pipe(output)\n      archive.on('error', reject)\n\n      // Adding socket.yml if needed\n      const localYMLChecksum = md5(fs.readFileSync(this.getSocketYMLFile()))\n      const remoteYMLChecksum = this.remote.files && this.remote.files['socket.yml']\n        ? this.remote.files['socket.yml'].checksum\n        : ''\n\n      const addMetaFiles = () => {\n        debug('Adding file to archive: \\'socket.yml\\'')\n        archive.file(this.getSocketYMLFile(), { name: 'socket.yml' })\n      }\n\n      debug('Processing: \\'socket.yml\\'')\n      if (params.partial) {\n        if (remoteYMLChecksum !== localYMLChecksum) {\n          addMetaFiles()\n        } else {\n          debug('Ignoring file: socket.yml')\n        }\n      } else {\n        addMetaFiles()\n      }\n\n      const files = this.getAllFiles()\n\n      // Adding all files (besides those filtered out)\n      files.forEach(file => {\n        // with \"internal\" path\n        const fileNameWithPath = file.internalPath\n        const remoteFile = this.remote.files ? this.remote.files[fileNameWithPath] : null\n\n        if (remoteFile && params.partial) {\n          if (remoteFile.checksum !== md5(fs.readFileSync(file.fullPath))) {\n            debug(`Adding file to archive: ${fileNameWithPath}`)\n            archive.file(file.fullPath, { name: fileNameWithPath })\n          } else {\n            debug(`Not adding file to archive (same checksum): ${fileNameWithPath}`)\n          }\n        } else {\n          archive.file(file.fullPath, { name: fileNameWithPath })\n        }\n      })\n      archive.finalize()\n\n      output.on('close', () => {\n        resolve()\n      })\n    })\n  }\n\n  createEnvZip () {\n    debug('createEnvZip')\n    return new Promise((resolve, reject) => {\n      const output = fs.createWriteStream(this.getSocketEnvZip(), { mode: 0o700 })\n      const archive = archiver('zip', { zlib: { level: 9 } })\n\n      const envFolder = path.join(this.getSocketPath(), '.dist', 'node_modules')\n\n      if (!fs.existsSync(envFolder)) {\n        mkdirp.sync(envFolder)\n      }\n\n      let filesInZip = 0\n\n      archive.pipe(output)\n      archive.on('error', reject)\n\n      const files = glob.sync(`**`, {\n        cwd: envFolder,\n        dot: true,\n        follow: true,\n        nodir: true\n      })\n\n      files.forEach(file => {\n        archive.file(path.join(envFolder, file), {name: path.join('node_modules', file)})\n        filesInZip += 1\n      })\n\n      if (filesInZip) {\n        archive.finalize()\n      } else {\n        fs.unlinkSync(this.getSocketEnvZip())\n        resolve(false)\n      }\n\n      output.on('close', () => {\n        resolve(true)\n      })\n    })\n  }\n\n  async updateEnvCall (method) {\n    debug('updateEnvCall')\n    if (await this.isEmptyEnv()) {\n      return\n    }\n\n    return new Promise((resolve, reject) => {\n      const form = new FormData()\n\n      let endpointPath = `/v2/instances/${session.project.instance}/environments/`\n      if (method === 'PATCH') {\n        endpointPath = `/v2/instances/${session.project.instance}/environments/${this.name}/`\n      }\n\n      debug('endpointPath', endpointPath)\n      form.append('name', this.name)\n      form.append('metadata', JSON.stringify({ checksum: this.getSocketNodeModulesChecksum() }))\n      form.append('zip_file', fs.createReadStream(this.getSocketEnvZip()))\n      debug('upload env zip')\n      form.submit({\n        method,\n        protocol: 'https:',\n        host: session.getHost(),\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        },\n        path: endpointPath\n\n      }, (err, res) => {\n        debug('end env upload')\n        if (res.statusCode === 200) {\n          resolve()\n        }\n\n        if (res.statusCode === 413) {\n          debug('error while updating environment - environment is to big :(')\n          return reject(new Error('environment is to big'))\n        }\n\n        if (err || res.statusCode === 404) {\n          debug(`environment ${this.name} was not found`)\n          return reject(err || res)\n        }\n\n        res.on('data', (data) => {\n          const message = data.toString()\n\n          if (res.statusCode > 299) {\n            debug(`error while updating environment (${res.statusCode})`)\n            return reject(message)\n          }\n\n          debug(`environment ${this.name} was found`)\n          resolve(message)\n        })\n      })\n    })\n  }\n\n  async updateEnv () {\n    debug('updateEnv')\n    const resp = await this.socketEnvShouldBeUpdated()\n    if (resp) {\n      if (!this.isDependency()) {\n        await this.createEnvZip()\n      }\n      return this.updateEnvCall(resp)\n    }\n    return 'No need to update'\n  }\n\n  async updateSocketZip ({ config, install = false }) {\n    debug('updateSocketZip')\n    let endpointPath = `/v2/instances/${session.project.instance}/sockets/`\n\n    if (!install) {\n      endpointPath += `${this.name}/`\n    }\n\n    const zipFiles = await this.listZipFiles(this.getSocketZip())\n    const allFiles = await this.getAllFiles().map(file => file.internalPath)\n    const numberOfFiles = zipFiles.length\n\n    if (numberOfFiles === 0 && this.isConfigSynced(config)) {\n      debug('config is synced and nothing to update')\n      return Promise.resolve()\n    }\n    debug('preparing update')\n\n    return new Promise(async (resolve, reject) => {\n      const form = new FormData()\n\n      form.append('name', this.name)\n\n      if (await this.isEmptyEnv()) {\n        debug('environment is null')\n        form.append('environment', '')\n      } else {\n        form.append('environment', this.name)\n      }\n\n      if (config) {\n        form.append('config', JSON.stringify(config))\n      }\n\n      const metadata = Object.assign({}, this.remote.metadata)\n      form.append('metadata', JSON.stringify(metadata))\n\n      debug('zip_file_list', allFiles)\n      form.append('zip_file_list', JSON.stringify(allFiles))\n\n      if (numberOfFiles > 0) {\n        form.append('zip_file', fs.createReadStream(this.getSocketZip()))\n      }\n\n      form.submit({\n        method: install ? 'POST' : 'PATCH',\n        protocol: 'https:',\n        host: session.getHost(),\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        },\n        path: endpointPath\n\n      }, (err, res) => {\n        debug('end upload')\n        let responseData = ''\n        let responseCode = ''\n        res.on('data', (data) => {\n          responseData += data.toString()\n          responseCode = res.statusCode\n        })\n        res.on('end', () => {\n          if (err || responseCode === 404) {\n            debug(`socket ${this.name} was not found`)\n            return reject(err || res)\n          }\n\n          if (responseCode > 299) {\n            debug(`error while updating socket (${res.statusCode})`)\n            return reject(responseData)\n          }\n\n          debug(`socket ${this.name} was found`)\n          resolve(responseData)\n        })\n      })\n    })\n  }\n\n  getSocketPath () {\n    return this.socketPath\n  }\n\n  getSocketYMLFile () {\n    return path.join(this.getSocketPath(), 'socket.yml')\n  }\n\n  async createAllZips () {\n    await this.compile({ updateSocketNPMDeps: true })\n    await this.createEnvZip()\n    await this.createZip({partial: false})\n  }\n\n  compile (params = { updateSocketNPMDeps: false }) {\n    debug(`compile: ${this.name}`)\n    debug(`compile socketPath: ${this.getSocketPath()}`)\n\n    return new Promise(async (resolve, reject) => {\n      const command = 'npm'\n      let args = null\n\n      if (params.updateSocketNPMDeps) {\n        args = 'run build -s'\n      } else {\n        args = 'run build:src -s'\n      }\n\n      process.env.FORCE_COLOR = true\n      const out = child.spawnSync(\n        command,\n        args.split(' '),\n        {\n          cwd: this.getSocketPath(),\n          maxBuffer: 2048 * 4096,\n          stdio: [process.stdio, 'pipe', 'pipe']\n        }\n      )\n\n      if (out.status !== 0) {\n        reject(new CompileError(out.stderr.toString()))\n      } else {\n        resolve()\n      }\n    })\n  }\n\n  build () {\n    debug(`socket build: ${this.name}`)\n\n    return new Promise(async (resolve, reject) => {\n      const command = 'npm'\n      const args = 'install'\n\n      process.env.FORCE_COLOR = true\n      const out = child.spawnSync(\n        command,\n        args.split(' '),\n        {\n          cwd: this.socketPath,\n          maxBuffer: 2048 * 1024,\n          stdio: [process.stdio, 'pipe', 'pipe']\n        }\n      )\n\n      if (out.status !== 0) {\n        reject(new CompileError(out.stderr.toString()))\n      } else {\n        resolve()\n      }\n    })\n  }\n\n  isConfigSynced (config) {\n    debug('isConfigSynced')\n    return _.isEqual(config, this.remote.config)\n  }\n\n  updateConfig (config) {\n    if (this.isConfigSynced(config)) {\n      return Promise.resolve()\n    }\n    return axios.request({\n      url: `https://${session.getHost()}/v2/instances/${session.project.instance}/sockets/${this.name}/`,\n      method: 'PATCH',\n      data: { config },\n      headers: {\n        'X-Api-Key': session.settings.account.getAuthKey()\n      }\n    })\n  }\n\n  async update (params = { config: null, updateSocketNPMDeps: false, updateEnv: false }) {\n    debug(`Socket update: ${this.name}`, params)\n    const config = Object.assign({}, this.remote.config, params.config)\n\n    // Get options from the env\n    if (this.spec.config) {\n      Object.keys(this.spec.config).forEach((optionName) => {\n        const envValue = this.getConfigOptionFromEnv(optionName)\n        if (envValue) {\n          debug(`setting value from env for: ${optionName}`)\n          config[optionName] = envValue\n        }\n      })\n    }\n\n    await this.verify()\n    if (!this.isDependency()) {\n      await this.compile({ updateSocketNPMDeps: params.updateSocketNPMDeps })\n      await this.createZip()\n    }\n\n    if (params.updateEnv) {\n      await this.updateEnv()\n    }\n\n    let resp = null\n    if (this.existRemotely) {\n      resp = await this.updateSocketZip({ config, install: false })\n    } else {\n      resp = await this.updateSocketZip({ config, install: true })\n    }\n\n    if (resp && resp.status !== 'ok') return this.waitForStatusInfo()\n    return { status: 'stopped' }\n  }\n\n  waitForStatusInfo () {\n    debug('waitForStatusInfo')\n\n    return new Promise((resolve, reject) => {\n      const getStatus = async () => {\n        const socket = await this.getRemote()\n        if (socket.status !== 'ok' && socket.status !== 'error') {\n          setTimeout(getStatus, 200)\n        } else {\n          this.setRemoteState(socket)\n          resolve({ status: socket.status, message: socket.status_info })\n        }\n      }\n      getStatus()\n    })\n  }\n\n  // Hosting\n  addHosting (hostingName, params) {\n    this.settings.addHosting(hostingName, params)\n    this.settings.save()\n  }\n\n  getHosting (hostingName) {\n    return Hosting.get(this, hostingName)\n  }\n\n  listHostings () {\n    return Hosting.list(this)\n  }\n\n  deleteHosting (hostingName) {\n    this.settings.deleteHosting(hostingName)\n    this.settings.save()\n    echo()\n    echo(4)(`Hosting ${hostingName} of ${this.name} has been deleted from config...`)\n  }\n\n  getScriptObject (fileFullPath) {\n    const srcFile = fileFullPath\n    const compiledFile = fileFullPath.replace(this.getSrcFolder(), this.getCompiledScriptsFolder())\n    return {\n      srcFile,\n      compiledFile\n    }\n  }\n\n  getFileForEndpoint (endpointName) {\n    if (endpointName.startsWith('events')) {\n      return this.spec.event_handlers[endpointName].file\n    }\n    return this.spec.endpoints[endpointName].file\n  }\n\n  getSourceMapPath (endpointName) {\n    const filePath = this.getFileForEndpoint(endpointName)\n    const { base, dir } = path.parse(filePath)\n    return path.join(\n      this.getSocketPath(),\n      dir,\n      '.bundles',\n      `${base}.map`\n    )\n  }\n\n  getOrigFileLine (traceData, endpointName) {\n    const smc = new SourceMap.SourceMapConsumer(\n      fs.readFileSync(this.getSourceMapPath(endpointName), { encoding: 'utf-8' })\n    )\n    return smc.originalPositionFor({\n      line: traceData.lineNumber,\n      column: traceData.columnNumber\n    })\n  }\n\n  getPrettyTrace (traceData, endpointName) {\n    const origFileLine = this.getOrigFileLine(traceData, endpointName)\n    const origFilePath = utils.getOrigFilePath(origFileLine)\n\n    return {\n      origFilePath,\n      lineNumber: origFileLine.line,\n      columnNumber: origFileLine.column,\n      lines: [\n        fs.readFileSync(\n          // origFilePath,\n          path.join(this.getSocketPath(), '../', origFilePath),\n          { encoding: 'utf-8' }).split('\\n')[origFileLine.line - 1],\n        p(origFileLine.column)('^')\n      ]\n    }\n  }\n\n  // Config\n  getConfigOptions () {\n    return this.spec.config\n  }\n\n  getConfigOptionFromEnv (optionName) {\n    const socketVarName = this.name.replace('-', '_').toUpperCase()\n    const optionVarName = optionName.replace('-', '_').toUpperCase()\n    return process.env[`${socketVarName}__${optionVarName}`] ||\n      process.env[`${socketVarName}_${optionVarName}`]\n  }\n\n  getConfigOptionsToAsk () {\n    // If there is not options in spec it is always no options to ask\n    if (this.spec && !this.spec.config) { return {} }\n\n    const options = {}\n\n    if (this.existLocally) {\n      Object.keys(this.spec.config).forEach((optionName) => {\n        const envValue = this.getConfigOptionFromEnv(optionName)\n        const option = this.spec.config[optionName]\n        if (option.required && !envValue) {\n          if (!this.remote.config || !this.remote.config[optionName]) {\n            options[optionName] = option\n          }\n        }\n      })\n      return options\n    }\n  }\n\n  async socketEnvShouldBeUpdated () {\n    debug('socketEnvShouldBeUpdated')\n    try {\n      const resp = await axios.request({\n        url: `https://${session.getHost()}/v2/instances/${session.project.instance}/environments/${this.name}/`,\n        method: 'GET',\n        timeout: 50000,\n        headers: {\n          'X-Api-Key': session.settings.account.getAuthKey()\n        }\n      })\n\n      if (resp.data.metadata.checksum === this.getSocketNodeModulesChecksum()) {\n        debug('socketEnvShouldBeUpdated', 'env is up to date')\n        return false\n      }\n      return 'PATCH'\n    } catch (err) {\n      return 'POST'\n    }\n  }\n\n  isCompatible () {\n    const socketMajorVersion = this.spec.version.split('.')[0]\n    if (socketMajorVersion !== session.majorVersion) {\n      throw new CompatibilityError(socketMajorVersion, session.majorVersion)\n    }\n    return true\n  }\n}\n\nSocket.listLocal = utils.listLocal\n\nexport default Socket\n"]}