{"version":3,"sources":["../../src/settings/settings.js"],"names":["warn","info","debug","Settings","constructor","attributes","configPath","load","path","join","baseDir","name","fs","accessSync","err","R_OK","YAML","readFileSync","process","exit","save","writeFileSync","dump","ErrorResponse","handle","get","key","set","value"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;AACA;;;;AACA;;;;AAEA,MAAM,EAAEA,IAAF,EAAQC,IAAR,EAAcC,KAAd,KAAwB,qBAAO,UAAP,CAA9B;;AAEe,MAAMC,QAAN,CAAe;AAC5BC,gBAAe;AACb,SAAKC,UAAL,GAAkB,EAAlB;AACA,SAAKC,UAAL,GAAkB,IAAlB;AACD;;AAEDC,SAAQ;AACN,SAAKD,UAAL,GAAkBE,eAAKC,IAAL,CAAU,KAAKC,OAAf,EAAyB,GAAE,KAAKC,IAAK,MAArC,CAAlB;;AAEA,QAAI;AACFC,mBAAGC,UAAH,CAAc,KAAKH,OAAnB;AACD,KAFD,CAEE,OAAOI,GAAP,EAAY;AACZ,aAAO,KAAP;AACD;;AAEDb,SAAM,WAAU,KAAKU,IAAK,MAAK,KAAKL,UAAW,EAA/C;;AAEA,QAAI;AACFL,WAAM,aAAY,KAAKK,UAAW,EAAlC;AACAM,mBAAGC,UAAH,CAAc,KAAKP,UAAnB,EAA+BM,aAAGG,IAAlC;AACD,KAHD,CAGE,OAAOD,GAAP,EAAY;AACZd,WAAK,wBAAL;AACA,aAAO,KAAP;AACD;;AAED,QAAI;AACF,WAAKK,UAAL,GAAkBW,iBAAKT,IAAL,CAAUK,aAAGK,YAAH,CAAgB,KAAKX,UAArB,EAAiC,MAAjC,CAAV,KAAuD,EAAzE;AACD,KAFD,CAEE,OAAOQ,GAAP,EAAY;AACZ,6BAAMA,GAAN,EAAW,mBAAE,EAAF,EAAO,YAAW,KAAKR,UAAW,EAAlC,CAAX;AACAY,cAAQC,IAAR,CAAa,CAAb;AACD;;AAED,WAAO,IAAP;AACD;;AAEDC,SAAQ;AACNlB,UAAO,UAAS,KAAKI,UAAW,EAAhC;AACA,QAAI;AACFM,mBAAGS,aAAH,CAAiB,KAAKf,UAAtB,EAAkCU,iBAAKM,IAAL,CAAU,KAAKjB,UAAf,CAAlC;AACD,KAFD,CAEE,OAAOS,GAAP,EAAY;AACZ,aAAO,IAAIS,uBAAJ,CAAkB,IAAlB,EAAwBC,MAAxB,CAA+BV,GAA/B,CAAP;AACD;AACF;;AAEDW,MAAKC,GAAL,EAAU;AACR,WAAO,KAAKrB,UAAL,CAAgBqB,GAAhB,KAAwB,IAA/B;AACD;;AAEDC,MAAKD,GAAL,EAAUE,KAAV,EAAiBR,IAAjB,EAAuB;AACrB,SAAKf,UAAL,CAAgBqB,GAAhB,IAAuBE,KAAvB;AACA,QAAIR,SAAS,KAAb,EAAoB,KAAKA,IAAL;AACpB,WAAO,IAAP;AACD;AApD2B;kBAATjB,Q","file":"settings.js","sourcesContent":["import fs from 'fs'\nimport path from 'path'\nimport YAML from 'js-yaml'\n\nimport logger from '../utils/debug'\nimport ErrorResponse from '../utils/error-response'\nimport { error, p } from '../utils/print-tools'\n\nconst { warn, info, debug } = logger('settings')\n\nexport default class Settings {\n  constructor () {\n    this.attributes = {}\n    this.configPath = null\n  }\n\n  load () {\n    this.configPath = path.join(this.baseDir, `${this.name}.yml`)\n\n    try {\n      fs.accessSync(this.baseDir)\n    } catch (err) {\n      return false\n    }\n\n    info(`Loading ${this.name} - ${this.configPath}`)\n\n    try {\n      info(`Checking: ${this.configPath}`)\n      fs.accessSync(this.configPath, fs.R_OK)\n    } catch (err) {\n      warn('Config doesn\\'t exist!')\n      return false\n    }\n\n    try {\n      this.attributes = YAML.load(fs.readFileSync(this.configPath, 'utf8')) || {}\n    } catch (err) {\n      error(err, p(10)(`at file: ${this.configPath}`))\n      process.exit(1)\n    }\n\n    return true\n  }\n\n  save () {\n    debug(`Saving ${this.configPath}`)\n    try {\n      fs.writeFileSync(this.configPath, YAML.dump(this.attributes))\n    } catch (err) {\n      return new ErrorResponse(this).handle(err)\n    }\n  }\n\n  get (key) {\n    return this.attributes[key] || null\n  }\n\n  set (key, value, save) {\n    this.attributes[key] = value\n    if (save !== false) this.save()\n    return this\n  }\n}\n"]}