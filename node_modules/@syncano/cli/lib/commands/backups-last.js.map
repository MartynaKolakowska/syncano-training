{"version":3,"sources":["../../src/commands/backups-last.js"],"names":["BackupsLast","constructor","context","session","Backups","connection","backups","run","backup","last","process","exit","id","instance","author","created_at","createAt","updated_at","updatedAt","details","format","dim","cyan","bold","email","dateParser","class","count","socket","hosting","err","message","time","substring"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;;;AAEA,MAAMA,WAAN,CAAiB;AACfC,cAAaC,OAAb,EAAsB;AACpB,SAAKC,OAAL,GAAeD,QAAQC,OAAvB;AACA,SAAKC,OAAL,GAAeF,QAAQC,OAAR,CAAgBE,UAAhB,CAA2BC,OAA1C;AACD;;AAEKC,KAAN,GAAa;AAAA;;AAAA;AACX,UAAI;AACF,cAAMC,SAAS,MAAM,MAAKJ,OAAL,CAAaK,IAAb,EAArB;;AAEA,YAAI,CAACD,MAAL,EAAa;AACX;AACA;AACAE,kBAAQC,IAAR,CAAa,CAAb;AACD;;AAED;AACA,cAAM,EAACC,EAAD,EAAKC,QAAL,EAAeC,MAAf,EAAuBC,YAAYC,QAAnC,EAA6CC,YAAYC,SAAzD,EAAoEC,OAApE,KAA+EX,MAArF;;AAEA,8BAAK,CAAL,EAAS,WAAUY,gBAAOC,GAAP,CAAW,IAAX,CAAiB,KAAID,gBAAOE,IAAP,CAAYC,IAAZ,CAAiBX,EAAjB,CAAqB,EAA7D;AACA,8BAAK,CAAL,EAAS,KAAIQ,gBAAOC,GAAP,CAAW,UAAX,CAAuB,KAAIR,QAAS,EAAjD;AACA,8BAAK,CAAL,EAAS,OAAMO,gBAAOC,GAAP,CAAW,QAAX,CAAqB,KAAIP,OAAOU,KAAM,EAArD;AACA,8BAAK,CAAL,EAAS,GAAEJ,gBAAOC,GAAP,CAAW,YAAX,CAAyB,KAAI,MAAKI,UAAL,CAAgBT,QAAhB,CAA0B,EAAlE;AACA,8BAAK,CAAL,EAAS,GAAEI,gBAAOC,GAAP,CAAW,YAAX,CAAyB,KAAI,MAAKI,UAAL,CAAgBP,SAAhB,CAA2B,EAAnE;AACA,8BAAK,CAAL,EAAS,MAAKE,gBAAOC,GAAP,CAAW,SAAX,CAAsB,GAApC;AACA,8BAAK,CAAL,EAAS,KAAID,gBAAOC,GAAP,CAAW,OAAX,CAAoB,KAAIF,QAAQO,KAAR,CAAcC,KAAM,EAAzD;AACA,8BAAK,CAAL,EAAS,IAAGP,gBAAOC,GAAP,CAAW,QAAX,CAAqB,KAAIF,QAAQS,MAAR,CAAeD,KAAM,EAA1D;AACA,8BAAK,CAAL,EAAS,GAAEP,gBAAOC,GAAP,CAAW,SAAX,CAAsB,KAAIF,QAAQU,OAAR,CAAgBF,KAAM,EAA3D;AACA;AACD,OAtBD,CAsBE,OAAOG,GAAP,EAAY;AACZ,+BAAMA,IAAIC,OAAV;AACArB,gBAAQC,IAAR,CAAa,CAAb;AACD;AA1BU;AA2BZ;;AAEDc,aAAYO,IAAZ,EAAkB;AAChB,WAAQ,GAAEA,KAAKC,SAAL,CAAe,CAAf,EAAiB,CAAjB,CAAoB,IAAGD,KAAKC,SAAL,CAAe,EAAf,EAAmB,EAAnB,CAAuB,EAAxD;AACD;AArCc;;kBAwCFjC,W","file":"backups-last.js","sourcesContent":["import format from 'chalk'\nimport { printNoBackupsInfo } from './helpers/backups'\nimport { echo, error } from '../utils/print-tools'\n\nclass BackupsLast{\n  constructor (context) {\n    this.session = context.session\n    this.Backups = context.session.connection.backups\n  }\n\n  async run () {\n    try {\n      const backup = await this.Backups.last()\n\n      if (!backup) {\n        printNoBackupsInfo()\n        echo()\n        process.exit(1)\n      }\n\n      echo()\n      const {id, instance, author, created_at: createAt, updated_at: updatedAt, details} = backup\n\n      echo(4)(`        ${format.dim('id')}: ${format.cyan.bold(id)}`)\n      echo(4)(`  ${format.dim('instance')}: ${instance}`)\n      echo(4)(`    ${format.dim('author')}: ${author.email}`)\n      echo(4)(`${format.dim('created at')}: ${this.dateParser(createAt)}`)\n      echo(4)(`${format.dim('updated at')}: ${this.dateParser(updatedAt)}`)\n      echo(4)(`   ${format.dim('details')}:`)\n      echo(8)(`  ${format.dim('class')}: ${details.class.count}`)\n      echo(8)(` ${format.dim('socket')}: ${details.socket.count}`)\n      echo(8)(`${format.dim('hosting')}: ${details.hosting.count}`)\n      echo()\n    } catch (err) {\n      error(err.message)\n      process.exit(1)\n    }\n  }\n\n  dateParser (time) {\n    return `${time.substring(0,9)} ${time.substring(11, 19)}`\n  }\n}\n\nexport default BackupsLast\n"]}