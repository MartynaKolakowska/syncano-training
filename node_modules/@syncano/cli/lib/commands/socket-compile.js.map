{"version":3,"sources":["../../src/commands/socket-compile.js"],"names":["debug","pendingUpdates","SocketCompile","constructor","context","session","Socket","run","socketName","cmd","msg","format","magenta","spinner","SimpleSpinner","start","socket","get","stop","existLocally","cyan","process","exit","socketList","list","configs","index","isDependency","compileSocket","name","err","response","data","detail","config","deployTimer","Timer","mainSpinner","socketNameStr","createAllZips","status","grey","duration","dim","getDuration","CompileError","red","traceback","split","map","line","join","message","getSocketToUpdate","fileName","localSockets","find","isSocketFile","bail","printUpdateSuccessful","updateStatus","errDetail","error"],"mappings":";;;;;;AAAA;;;;AAEA;;;;AACA;;AACA;;AACA;;AACA;;;;;;AAEA,MAAM,EAAEA,KAAF,KAAY,qBAAO,mBAAP,CAAlB;;AAEA,MAAMC,iBAAiB,EAAvB;;AAEe,MAAMC,aAAN,CAAoB;AACjCC,cAAaC,OAAb,EAAsB;AACpB,SAAKA,OAAL,GAAeA,OAAf;AACA,SAAKC,OAAL,GAAeD,QAAQC,OAAvB;AACA,SAAKC,MAAL,GAAcF,QAAQE,MAAtB;AACD;;AAEKC,KAAN,CAAW,CAACC,UAAD,EAAaC,GAAb,CAAX,EAA8B;AAAA;;AAAA;AAC5B,YAAKA,GAAL,GAAWA,GAAX;;AAEA,UAAID,UAAJ,EAAgB;AACdR,cAAO,qBAAoBQ,UAAW,EAAtC;AACA,cAAME,MAAM,mBAAE,CAAF,EAAM,GAAEC,gBAAOC,OAAP,CAAe,kBAAf,CAAmC,IAAG,6BAAc,EAA5D,CAAZ;AACA,cAAMC,UAAU,IAAIC,sBAAJ,CAAkBJ,GAAlB,EAAuBK,KAAvB,EAAhB;AACA,cAAMC,SAAS,MAAM,MAAKV,MAAL,CAAYW,GAAZ,CAAgBT,UAAhB,CAArB;AACAK,gBAAQK,IAAR;;AAEA,YAAI,CAACF,OAAOG,YAAZ,EAA0B;AACxB;AACA,iCAAM,CAAN,EAAU,UAASR,gBAAOS,IAAP,CAAYZ,UAAZ,CAAwB,mBAA3C;AACA;AACAa,kBAAQC,IAAR,CAAa,CAAb;AACD;AACD,cAAKC,UAAL,GAAkB,CAACP,MAAD,CAAlB;AACD,OAdD,MAcO;AACL,cAAMN,MAAM,mBAAE,CAAF,EAAM,GAAEC,gBAAOC,OAAP,CAAe,kBAAf,CAAmC,IAAG,6BAAc,EAA5D,CAAZ;AACA,cAAMC,UAAU,IAAIC,sBAAJ,CAAkBJ,GAAlB,EAAuBK,KAAvB,EAAhB;AACA,cAAKQ,UAAL,GAAkB,MAAM,MAAKjB,MAAL,CAAYkB,IAAZ,EAAxB;AACAX,gBAAQK,IAAR;AACD;;AAED,YAAMO,UAAU,EAAhB;;AAEA,UAAI;AACF,YAAIC,KAAJ;AACA,aAAKA,KAAL,IAAc,MAAKH,UAAnB,EAA+B;AAC7B,gBAAMP,SAAS,MAAKO,UAAL,CAAgBG,KAAhB,CAAf;AACA,cAAI,CAACV,OAAOW,YAAP,EAAL,EAA4B;AAC1B,kBAAM,MAAKC,aAAL,CAAmBZ,MAAnB,EAA2BS,QAAQT,OAAOa,IAAf,CAA3B,CAAN;AACD;AACF;;AAED;AACD,OAVD,CAUE,OAAOC,GAAP,EAAY;AACZ,YAAIA,IAAIC,QAAJ,IAAgBD,IAAIC,QAAJ,CAAaC,IAA7B,IAAqCF,IAAIC,QAAJ,CAAaC,IAAb,CAAkBC,MAA3D,EAAmE;AACjE,iCAAM,CAAN,EAASH,IAAIC,QAAJ,CAAaC,IAAb,CAAkBC,MAA3B;AACD,SAFD,MAEO;AACL,iCAAM,CAAN,EAASH,GAAT;AACD;AACDT,gBAAQC,IAAR,CAAa,CAAb;AACD;AA3C2B;AA4C7B;;AAEKM,eAAN,CAAqBZ,MAArB,EAA6BkB,MAA7B,EAAqC;AAAA;;AAAA;AACnClC,YAAO,kBAAiBgB,OAAOa,IAAK,EAApC;AACA,YAAMM,cAAc,IAAIC,gBAAJ,EAApB;AACA,YAAM1B,MAAM,mBAAE,CAAF,EAAM,GAAEC,gBAAOC,OAAP,CAAe,iBAAf,CAAkC,IAAG,6BAAc,IAAGD,gBAAOS,IAAP,CAAYJ,OAAOa,IAAnB,CAAyB,EAAvF,CAAZ;AACA,YAAMhB,UAAU,IAAIC,sBAAJ,CAAkBJ,GAAlB,EAAuBK,KAAvB,EAAhB;;AAEA;AACA,UAAI,CAACd,eAAee,OAAOa,IAAtB,CAAL,EAAkC;AAAE5B,uBAAee,OAAOa,IAAtB,IAA8B,CAA9B;AAAiC;;AAErE5B,qBAAee,OAAOa,IAAtB,KAA+B,CAA/B;AACA,UAAI5B,eAAee,OAAOa,IAAtB,IAA8B,CAAlC,EAAqC;AACnChB,gBAAQK,IAAR;AACA,eAAKmB,WAAL,CAAiBtB,KAAjB;AACAf,cAAO,iCAAgCC,eAAee,OAAOa,IAAtB,CAA4B,EAAnE;AACA;AACD;;AAED,YAAMS,gBAAiB,GAAE3B,gBAAOS,IAAP,CAAYJ,OAAOa,IAAnB,CAAyB,EAAlD;;AAEA;AACA,UAAI;AACF,cAAMb,OAAOuB,aAAP,EAAN;AACA1B,gBAAQK,IAAR;AACA,cAAMsB,SAAS7B,gBAAO8B,IAAP,CAAY,kBAAZ,CAAf;AACA,cAAMC,WAAW/B,gBAAOgC,GAAP,CAAWR,YAAYS,WAAZ,EAAX,CAAjB;AACA,8BAAK,CAAL,EAAS,GAAEJ,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAGI,QAAS,EAAhE;AACD,OAND,CAME,OAAOZ,GAAP,EAAY;AACZ9B,cAAM8B,GAAN;AACAjB,gBAAQK,IAAR;AACA,YAAIY,eAAee,oBAAnB,EAAiC;AAC/B,gBAAML,SAAS7B,gBAAOmC,GAAP,CAAW,oBAAX,CAAf;AACA,cAAIhB,IAAIiB,SAAR,EAAmB;AACjB,kCAAK,CAAL,EAAS,GAAEP,MAAO,IAAG,6BAAc,IAAGF,aAAc,OAAMR,IAAIiB,SAAJ,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,GAA1B,CAA8B;AAAA,qBAAQ,mBAAE,CAAF,EAAKC,IAAL,CAAR;AAAA,aAA9B,EAAkDC,IAAlD,CAAuD,IAAvD,CAA6D,EAAvH;AACD,WAFD,MAEO;AACL,kCAAK,CAAL,EAAS,GAAEX,MAAO,IAAG,6BAAc,IAAGF,aAAc,wCAApD;AACD;AACF,SAPD,MAOO;AACL,gBAAME,SAAS7B,gBAAOmC,GAAP,CAAW,oBAAX,CAAf;AACA,cAAIhB,IAAIsB,OAAR,EAAiB;AACf,kCAAK,CAAL,EAAS,GAAEZ,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAG3B,gBAAOmC,GAAP,CAAWhB,IAAIsB,OAAf,CAAwB,EAA/E;AACD,WAFD,MAEO;AACL,kCAAK,CAAL,EAAS,GAAEZ,MAAO,IAAG,6BAAc,IAAGF,aAAc,EAApD;AACA,mCAAMR,GAAN;AACD;AACF;AACF;AA7CkC;AA8CpC;;AAEDuB,oBAAmBC,QAAnB,EAA6B;AAC3B,WAAO,KAAKC,YAAL,CAAkBC,IAAlB,CAAwBxC,MAAD,IAAYA,OAAOyC,YAAP,CAAoBH,QAApB,CAAnC,CAAP;AACD;;AAED,SAAOI,IAAP,GAAe;AACb;AACArC,YAAQC,IAAR,CAAa,CAAb;AACD;;AAED,SAAOqC,qBAAP,CAA8BnD,UAA9B,EAA0CoD,YAA1C,EAAwDzB,WAAxD,EAAqE;AACnEnC,UAAM,uBAAN,EAA+BQ,UAA/B,EAA2CoD,YAA3C;AACA,UAAMlB,WAAW/B,gBAAOgC,GAAP,CAAWR,YAAYS,WAAZ,EAAX,CAAjB;AACA,UAAMN,gBAAiB,GAAE3B,gBAAOS,IAAP,CAAYZ,UAAZ,CAAwB,EAAjD;;AAEA,QAAIoD,aAAapB,MAAb,KAAwB,IAA5B,EAAkC;AAChC,YAAMA,SAAS7B,gBAAO8B,IAAP,CAAY,gBAAZ,CAAf;AACA,4BAAK,CAAL,EAAS,GAAED,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAGI,QAAS,EAAhE;AACD,KAHD,MAGO,IAAIkB,aAAapB,MAAb,KAAwB,SAA5B,EAAuC;AAC5C,YAAMA,SAAS7B,gBAAO8B,IAAP,CAAY,iBAAZ,CAAf;AACA,4BAAK,CAAL,EAAS,GAAED,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAGI,QAAS,EAAhE;AACD,KAHM,MAGA,IAAIkB,aAAapB,MAAb,KAAwB,OAA5B,EAAqC;AAC1C,YAAMqB,YAAYlD,gBAAOmC,GAAP,CAAWc,aAAaR,OAAb,CAAqBU,KAAhC,CAAlB;AACA,YAAMtB,SAAS7B,gBAAOmC,GAAP,CAAW,oBAAX,CAAf;AACA,4BAAK,CAAL,EAAS,GAAEN,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAGI,QAAS,IAAGmB,SAAU,EAA7E;AACD,KAJM,MAIA;AACL,YAAMrB,SAAS7B,gBAAOmC,GAAP,CAAW,oBAAX,CAAf;AACA,4BAAK,CAAL,EAAS,GAAEN,MAAO,IAAG,6BAAc,IAAGF,aAAc,IAAGI,QAAS,EAAhE;AACD;AACF;AAjIgC;kBAAdxC,a","file":"socket-compile.js","sourcesContent":["import format from 'chalk'\n\nimport logger from '../utils/debug'\nimport { SimpleSpinner } from './helpers/spinner'\nimport { p, error, echo } from '../utils/print-tools'\nimport { currentTime, Timer } from '../utils/date-utils'\nimport { CompileError } from '../utils/errors'\n\nconst { debug } = logger('cmd-socket-deploy')\n\nconst pendingUpdates = {}\n\nexport default class SocketCompile {\n  constructor (context) {\n    this.context = context\n    this.session = context.session\n    this.Socket = context.Socket\n  }\n\n  async run ([socketName, cmd]) {\n    this.cmd = cmd\n\n    if (socketName) {\n      debug(`Deploying Socket: ${socketName}`)\n      const msg = p(2)(`${format.magenta('getting sockets:')} ${currentTime()}`)\n      const spinner = new SimpleSpinner(msg).start()\n      const socket = await this.Socket.get(socketName)\n      spinner.stop()\n\n      if (!socket.existLocally) {\n        echo()\n        error(4)(`Socket ${format.cyan(socketName)} cannot be found!`)\n        echo()\n        process.exit(1)\n      }\n      this.socketList = [socket]\n    } else {\n      const msg = p(2)(`${format.magenta('getting sockets:')} ${currentTime()}`)\n      const spinner = new SimpleSpinner(msg).start()\n      this.socketList = await this.Socket.list()\n      spinner.stop()\n    }\n\n    const configs = {}\n\n    try {\n      let index\n      for (index in this.socketList) {\n        const socket = this.socketList[index]\n        if (!socket.isDependency()) {\n          await this.compileSocket(socket, configs[socket.name])\n        }\n      }\n\n      echo()\n    } catch (err) {\n      if (err.response && err.response.data && err.response.data.detail) {\n        error(4)(err.response.data.detail)\n      } else {\n        error(4)(err)\n      }\n      process.exit(1)\n    }\n  }\n\n  async compileSocket (socket, config) {\n    debug(`compileSocket: ${socket.name}`)\n    const deployTimer = new Timer()\n    const msg = p(4)(`${format.magenta('socket compile:')} ${currentTime()} ${format.cyan(socket.name)}`)\n    const spinner = new SimpleSpinner(msg).start()\n\n    // We have co count here updates\n    if (!pendingUpdates[socket.name]) { pendingUpdates[socket.name] = 0 }\n\n    pendingUpdates[socket.name] += 1\n    if (pendingUpdates[socket.name] > 1) {\n      spinner.stop()\n      this.mainSpinner.start()\n      debug(`not updating, update pending: ${pendingUpdates[socket.name]}`)\n      return\n    }\n\n    const socketNameStr = `${format.cyan(socket.name)}`\n\n    // Let's compile and update if it is not hot mode\n    try {\n      await socket.createAllZips()\n      spinner.stop()\n      const status = format.grey('socket compiled:')\n      const duration = format.dim(deployTimer.getDuration())\n      echo(6)(`${status} ${currentTime()} ${socketNameStr} ${duration}`)\n    } catch (err) {\n      debug(err)\n      spinner.stop()\n      if (err instanceof CompileError) {\n        const status = format.red('    compile error:')\n        if (err.traceback) {\n          echo(2)(`${status} ${currentTime()} ${socketNameStr}\\n\\n${err.traceback.split('\\n').map(line => p(8)(line)).join('\\n')}`)\n        } else {\n          echo(2)(`${status} ${currentTime()} ${socketNameStr} Error while executing 'build' script!`)\n        }\n      } else {\n        const status = format.red('socket sync error:')\n        if (err.message) {\n          echo(2)(`${status} ${currentTime()} ${socketNameStr} ${format.red(err.message)}`)\n        } else {\n          echo(2)(`${status} ${currentTime()} ${socketNameStr}`)\n          error(err)\n        }\n      }\n    }\n  }\n\n  getSocketToUpdate (fileName) {\n    return this.localSockets.find((socket) => socket.isSocketFile(fileName))\n  }\n\n  static bail () {\n    echo()\n    process.exit(1)\n  }\n\n  static printUpdateSuccessful (socketName, updateStatus, deployTimer) {\n    debug('printUpdateSuccessful', socketName, updateStatus)\n    const duration = format.dim(deployTimer.getDuration())\n    const socketNameStr = `${format.cyan(socketName)}`\n\n    if (updateStatus.status === 'ok') {\n      const status = format.grey('socket synced:')\n      echo(6)(`${status} ${currentTime()} ${socketNameStr} ${duration}`)\n    } else if (updateStatus.status === 'stopped') {\n      const status = format.grey('socket in sync:')\n      echo(5)(`${status} ${currentTime()} ${socketNameStr} ${duration}`)\n    } else if (updateStatus.status === 'error') {\n      const errDetail = format.red(updateStatus.message.error)\n      const status = format.red('socket not synced:')\n      echo(2)(`${status} ${currentTime()} ${socketNameStr} ${duration} ${errDetail}`)\n    } else {\n      const status = format.red('socket not synced:')\n      echo(2)(`${status} ${currentTime()} ${socketNameStr} ${duration}`)\n    }\n  }\n}\n"]}