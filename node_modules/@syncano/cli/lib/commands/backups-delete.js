'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _spinner = require('./helpers/spinner');

var _printTools = require('../utils/print-tools');

function _asyncToGenerator(fn) { return function () { var gen = fn.apply(this, arguments); return new Promise(function (resolve, reject) { function step(key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { return Promise.resolve(value).then(function (value) { step("next", value); }, function (err) { step("throw", err); }); } } return step("next"); }); }; }

class BackupsDelete {
  constructor(context) {
    this.session = context.session;
    this.Backups = context.session.connection.backups;
  }

  run([option]) {
    var _this = this;

    return _asyncToGenerator(function* () {
      try {
        if (option === 'all') {
          const spinner = new _spinner.SimpleSpinner((0, _printTools.p)(2)('Deleting Backups...')).start();
          yield _this.Backups.deleteAll();
          spinner.stop();
          spinner.succeed((0, _printTools.p)(2)(`All backups deleted.`));
          (0, _printTools.echo)();
        } else {
          yield _this.Backups.delete(option);
          (0, _printTools.echo)(4)(`Backup deleted.`);
          (0, _printTools.echo)();
        }
      } catch (err) {
        (0, _printTools.echo)();
        (0, _printTools.error)(err.message);
        process.exit(1);
      }
    })();
  }
}

exports.default = BackupsDelete;
module.exports = exports['default'];
//# sourceMappingURL=backups-delete.js.map